CONSEGNA:
Ciao ragazzi,
Esercizio di oggi: nome repo: db-university
Dopo aver creato un nuovo database nel vostro phpMyAdmin e aver 
importato lo schema allegato, eseguite le query del file allegato.
Cosa consegnare? Dopo aver testato le vostre query con phpMyAdmin, 
riportatele in un file txt e caricatelo nella vostra repo.


QUERY con SELECT
1. Selezionare tutti gli studenti nati nel 1990 (160)
SELECT `name`,`surname`
-> FROM `students`
-> WHERE YEAR(`date_of_birth`)=1990;

2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT `name`
-> FROM `courses`
-> WHERE `cfu`>10;

3. Selezionare tutti gli studenti che hanno più di 30 anni 
SELECT `name`,`surname`
-> FROM `students`
-> WHERE YEAR(`date_of_birth`)<1992;

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)
SELECT `name`
FROM `courses`
WHERE `year`=1
AND `period` LIKE  '__semestre%';

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)

SELECT *
FROM `exams`
WHERE HOUR(`hour`)>='14:00'
AND YEAR(`date`) = 2020
AND MONTH(`date`) = 06
AND DAY(`date`) = 20;

oppure(scrivevo la data nel formato sbagliato)

SELECT *
FROM `exams`
WHERE HOUR(`hour`)>='14:00'
AND DATE(`date`)= '2020-06-20'; 

6. Selezionare tutti i corsi di laurea magistrale (38)
SELECT `id`
FROM `degrees`
WHERE `level` LIKE '%magistrale%';

7. Da quanti dipartimenti è composta l'università? (12)
SELECT COUNT(*) AS 'numero_di_dipartimenti'
FROM `departments`;

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)

SELECT * 
FROM `teachers` 
WHERE `phone` IS NULL;


QUERY con GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno
SELECT COUNT(*) AS 'numero di iscritti', YEAR(`enrolment_date`) AS 'anno di iscrizione'
FROM `students` 
GROUP BY YEAR(`enrolment_date`);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT COUNT(*) AS 'numero insegnanti', `office_address` AS 'indirizzo'
FROM `teachers` 
GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame
SELECT `exam_id` as 'ID appello', AVG(`vote`) AS 'voto medio'
FROM `exam_student` 
GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT `department_id` as 'ID dipartimento', COUNT(`id`) AS 'numero corsi di laurea'
FROM `degrees` 
GROUP BY `department_id`;